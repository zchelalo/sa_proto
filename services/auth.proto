syntax = "proto3";

package auth;

import "user.proto";
import "shared.proto";

option go_package = "pkg/proto;proto";

service AuthService {
  rpc signIn (SignInRequest) returns (SignInResponse);
  rpc signUp (SignUpRequest) returns (SignUpResponse);
  rpc signOut (SignOutRequest) returns (SignOutResponse);
  rpc isAuthorized (IsAuthorizedRequest) returns (IsAuthorizedResponse);
}

message Auth {
  string accessToken = 1;
  string refreshToken = 2;
  int64 expiresAt = 3;
  user.UserData user = 4;
}

message Tokens {
  string accessToken = 1;
  string refreshToken = 2;
  optional int64 expiresAt = 3;
}

message IsAuth {
  bool isAuthorized = 1;
  optional string userId = 2;
  optional Tokens tokens = 3;
}

message SignInRequest {
  string email = 1;
  string password = 2;
}

message SignInResponse {
  oneof result {
    Auth auth = 1;
    shared.Error error = 2;
  }
}

message SignUpRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}

message SignUpResponse {
  oneof result {
    Auth auth = 1;
    shared.Error error = 2;
  }
}

message SignOutRequest {
  string refreshToken = 1;
}

message SignOutResponse {
  oneof result {
    bool success = 1;
    shared.Error error = 2;
  }
}

message IsAuthorizedRequest {
  string accessToken = 1;
  string refreshToken = 2;
}

message IsAuthorizedResponse {
  oneof result {
    IsAuth data = 1;
    shared.Error error = 2;
  }
}